apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200517180335-820a4a27ea84
  creationTimestamp: null
  name: environments.landscaper.gardener.cloud
spec:
  group: landscaper.gardener.cloud
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    shortNames:
    - env
    singular: environment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Environment defines a environment that is created by a agent.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the environment.
            properties:
              hostTarget:
                description: HostTarget describes the target that is used for the
                  deployers.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations is an unstructured key value map stored
                      with a resource that may be set by external tools to store and
                      retrieve arbitrary metadata. They are not queryable and should
                      be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                    type: object
                  config:
                    x-kubernetes-preserve-unknown-fields: true
                  labels:
                    additionalProperties:
                      type: string
                    description: 'Map of string keys and values that can be used to
                      organize and categorize (scope and select) objects. May match
                      selectors of replication controllers and services. More info:
                      http://kubernetes.io/docs/user-guide/labels'
                    type: object
                  type:
                    description: Type is the type of the target that defines its data
                      structure. The actual schema may be defined by a target type
                      crd in the future.
                    type: string
                required:
                - type
                type: object
              landscaperClusterConfig:
                description: LandscaperClusterRestConfig describes the connection
                  information to connect to the landscaper cluster. This information
                  should be provided by the agent as the access information may differ
                  when calling from different networking zones.
                properties:
                  apiPath:
                    description: APIPath is a sub-path that points to an API root.
                    type: string
                  caData:
                    description: CAData holds PEM-encoded bytes (typically read from
                      a root certificates bundle). CAData takes precedence over CAFile
                    format: byte
                    type: string
                  host:
                    description: Host must be a host string, a host:port pair, or
                      a URL to the base of the apiserver. If a URL is given then the
                      (optional) Path of that URL represents a prefix that must be
                      appended to all request URIs used to access the apiserver. This
                      allows a frontend proxy to easily relocate all of the apiserver
                      endpoints.
                    type: string
                  insecure:
                    description: Server should be accessed without verifying the TLS
                      certificate. For testing only.
                    type: boolean
                  nextProtos:
                    description: NextProtos is a list of supported application level
                      protocols, in order of preference. Used to populate tls.Config.NextProtos.
                      To indicate to the server http/1.1 is preferred over http/2,
                      set to ["http/1.1", "h2"] (though the server is free to ignore
                      that preference). To use only http/1.1, set to ["http/1.1"].
                    items:
                      type: string
                    type: array
                  serverName:
                    description: ServerName is passed to the server for SNI and is
                      used in the client to check server ceritificates against. If
                      ServerName is empty, the hostname used to contact the server
                      is used.
                    type: string
                required:
                - apiPath
                - host
                type: object
              namespace:
                description: Namespace is the host cluster namespace where the deployers
                  should be installed.
                type: string
              targetSelectors:
                description: TargetSelector defines the target selector that is applied
                  to all installed deployers
                items:
                  description: TargetSelector describes a selector that matches specific
                    targets.
                  properties:
                    annotations:
                      description: Annotations matches a target based on annotations.
                      items:
                        description: Requirement contains values, a key, and an operator
                          that relates the key and values. The zero value of Requirement
                          is invalid. Requirement implements both set based match
                          and exact match Requirement should be initialized via NewRequirement
                          constructor for creating a valid Requirement.
                        properties:
                          key:
                            type: string
                          operator:
                            description: Operator represents a key/field's relationship
                              to value(s). See labels.Requirement and fields.Requirement
                              for more details.
                            type: string
                          values:
                            description: In huge majority of cases we have at most
                              one value here. It is generally faster to operate on
                              a single-element slice than on a single-element map,
                              so we have a slice here.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    labels:
                      description: Labels matches a target based on its labels.
                      items:
                        description: Requirement contains values, a key, and an operator
                          that relates the key and values. The zero value of Requirement
                          is invalid. Requirement implements both set based match
                          and exact match Requirement should be initialized via NewRequirement
                          constructor for creating a valid Requirement.
                        properties:
                          key:
                            type: string
                          operator:
                            description: Operator represents a key/field's relationship
                              to value(s). See labels.Requirement and fields.Requirement
                              for more details.
                            type: string
                          values:
                            description: In huge majority of cases we have at most
                              one value here. It is generally faster to operate on
                              a single-element slice than on a single-element map,
                              so we have a slice here.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    targets:
                      description: Targets defines a list of specific targets (name
                        and namespace) that should be reconciled.
                      items:
                        description: ObjectReference is the reference to a kubernetes
                          object.
                        properties:
                          name:
                            description: Name is the name of the kubernetes object.
                            type: string
                          namespace:
                            description: Namespace is the namespace of kubernetes
                              object.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  type: object
                type: array
            required:
            - hostTarget
            - landscaperClusterConfig
            - namespace
            - targetSelectors
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
