apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: installations.landscaper.gardener.cloud
spec:
  group: landscaper.gardener.cloud
  names:
    kind: Installation
    plural: installations
    shortNames:
    - inst
    singular: installation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: phase
      type: string
    - jsonPath: .status.executionRef.name
      name: Execution
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Installation contains the configuration of a component
        properties:
          spec:
            description: Spec contains the specification for a installation.
            properties:
              automaticReconcile:
                description: AutomaticReconcile allows to configure automatically
                  repeated reconciliations.
                properties:
                  failedReconcile:
                    description: FailedReconcile allows to configure automatically
                      repeated reconciliations for failed installations. If not set,
                      no such automatically repeated reconciliations are triggered.
                    properties:
                      interval:
                        description: Interval specifies the interval between two subsequent
                          repeated reconciliations. If not set, a default of 5 minutes
                          is used.
                        type: string
                      numberOfReconciles:
                        description: NumberOfReconciles specifies the maximal number
                          of automatically repeated reconciliations. If not set, no
                          upper limit exists.
                        format: int32
                        type: integer
                    type: object
                  succeededReconcile:
                    description: SucceededReconcile allows to configure automatically
                      repeated reconciliations for succeeded installations. If not
                      set, no such automatically repeated reconciliations are triggered.
                    properties:
                      interval:
                        description: Interval specifies the interval between two subsequent
                          repeated reconciliations. If not set, a default of 24 hours
                          is used.
                        type: string
                    type: object
                type: object
              blueprint:
                description: Blueprint is the resolved reference to the definition.
                properties:
                  inline:
                    description: Inline defines a inline yaml filesystem with a blueprint.
                    properties:
                      filesystem:
                        description: Filesystem defines a inline yaml filesystem with
                          a blueprint.
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - filesystem
                    type: object
                  ref:
                    description: Reference defines a remote reference to a blueprint
                    properties:
                      resourceName:
                        description: ResourceName is the name of the blueprint as
                          defined by a component descriptor.
                        type: string
                    required:
                    - resourceName
                    type: object
                type: object
              componentDescriptor:
                description: ComponentDescriptor is a reference to the installation's
                  component descriptor
                properties:
                  inline:
                    description: InlineDescriptorReference defines an inline component
                      descriptor
                    properties:
                      component:
                        description: Spec contains the specification of the component.
                        properties:
                          componentReferences:
                            description: ComponentReferences references component
                              dependencies that can be resolved in the current context.
                            items:
                              description: ComponentReference describes the reference
                                to another component in the registry.
                              properties:
                                componentName:
                                  description: ComponentName describes the remote
                                    name of the referenced object
                                  type: string
                                extraIdentity:
                                  additionalProperties:
                                    type: string
                                  description: ExtraIdentity is the identity of an
                                    object. An additional label with key "name" ist
                                    not allowed
                                  type: object
                                labels:
                                  description: Labels defines an optional set of additional
                                    labels describing the object.
                                  items:
                                    description: Label is a label that can be set
                                      on objects.
                                    properties:
                                      name:
                                        description: Name is the unique name of the
                                          label.
                                        type: string
                                      value:
                                        description: Value is the json/yaml data of
                                          the label
                                        format: byte
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                name:
                                  description: Name is the context unique name of
                                    the object.
                                  type: string
                                version:
                                  description: Version is the semver version of the
                                    object.
                                  type: string
                              required:
                              - name
                              - componentName
                              - version
                              type: object
                            type: array
                          labels:
                            description: Labels defines an optional set of additional
                              labels describing the object.
                            items:
                              description: Label is a label that can be set on objects.
                              properties:
                                name:
                                  description: Name is the unique name of the label.
                                  type: string
                                value:
                                  description: Value is the json/yaml data of the
                                    label
                                  format: byte
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                          name:
                            description: Name is the context unique name of the object.
                            type: string
                          provider:
                            description: Provider defines the provider type of a component.
                              It can be external or internal.
                            type: string
                          repositoryContexts:
                            description: RepositoryContexts defines the previous repositories
                              of the component
                            items:
                              description: UnstructuredTypedObject describes a generic
                                typed object.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          resources:
                            description: Resources defines all resources that are
                              created by the component and by a third party.
                            items:
                              description: Resource describes a resource dependency
                                of a component.
                              properties:
                                access:
                                  description: Access describes the type specific
                                    method to access the defined resource.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                extraIdentity:
                                  additionalProperties:
                                    type: string
                                  description: ExtraIdentity is the identity of an
                                    object. An additional label with key "name" ist
                                    not allowed
                                  type: object
                                labels:
                                  description: Labels defines an optional set of additional
                                    labels describing the object.
                                  items:
                                    description: Label is a label that can be set
                                      on objects.
                                    properties:
                                      name:
                                        description: Name is the unique name of the
                                          label.
                                        type: string
                                      value:
                                        description: Value is the json/yaml data of
                                          the label
                                        format: byte
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                name:
                                  description: Name is the context unique name of
                                    the object.
                                  type: string
                                relation:
                                  description: Relation describes the relation of
                                    the resource to the component. Can be a local
                                    or external resource
                                  type: string
                                srcRef:
                                  description: SourceRef defines a list of source
                                    names. These names reference the sources defines
                                    in `component.sources`.
                                  items:
                                    description: SourceRef defines a reference to
                                      a source
                                    properties:
                                      identitySelector:
                                        additionalProperties:
                                          type: string
                                        description: IdentitySelector defines the
                                          identity that is used to match a source.
                                        type: object
                                      labels:
                                        description: Labels defines an optional set
                                          of additional labels describing the object.
                                        items:
                                          description: Label is a label that can be
                                            set on objects.
                                          properties:
                                            name:
                                              description: Name is the unique name
                                                of the label.
                                              type: string
                                            value:
                                              description: Value is the json/yaml
                                                data of the label
                                              format: byte
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                type:
                                  description: Type describes the type of the object.
                                  type: string
                                version:
                                  description: Version is the semver version of the
                                    object.
                                  type: string
                              required:
                              - name
                              - version
                              - type
                              - access
                              type: object
                            type: array
                          sources:
                            description: Sources defines sources that produced the
                              component
                            items:
                              description: Source is the definition of a component's
                                source.
                              properties:
                                access:
                                  description: UnstructuredTypedObject describes a
                                    generic typed object.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                extraIdentity:
                                  additionalProperties:
                                    type: string
                                  description: ExtraIdentity is the identity of an
                                    object. An additional label with key "name" ist
                                    not allowed
                                  type: object
                                labels:
                                  description: Labels defines an optional set of additional
                                    labels describing the object.
                                  items:
                                    description: Label is a label that can be set
                                      on objects.
                                    properties:
                                      name:
                                        description: Name is the unique name of the
                                          label.
                                        type: string
                                      value:
                                        description: Value is the json/yaml data of
                                          the label
                                        format: byte
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                name:
                                  description: Name is the context unique name of
                                    the object.
                                  type: string
                                type:
                                  description: Type describes the type of the object.
                                  type: string
                                version:
                                  description: Version is the semver version of the
                                    object.
                                  type: string
                              required:
                              - name
                              - version
                              - type
                              - access
                              type: object
                            type: array
                          version:
                            description: Version is the semver version of the object.
                            type: string
                        required:
                        - name
                        - version
                        - repositoryContexts
                        - provider
                        - sources
                        - componentReferences
                        - resources
                        type: object
                      meta:
                        description: Metadata specifies the schema version of the
                          component.
                        properties:
                          schemaVersion:
                            description: Version is the schema version of the component
                              descriptor.
                            type: string
                        required:
                        - schemaVersion
                        type: object
                    required:
                    - meta
                    - component
                    type: object
                  ref:
                    description: ComponentDescriptorReference is the reference to
                      a component descriptor
                    properties:
                      componentName:
                        description: ComponentName defines the unique of the component
                          containing the resource.
                        type: string
                      repositoryContext:
                        description: RepositoryContext defines the context of the
                          component repository to resolve blueprints.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      version:
                        description: Version defines the version of the component.
                        type: string
                    required:
                    - componentName
                    - version
                    type: object
                type: object
              context:
                description: Context defines the current context of the installation.
                type: string
              exportDataMappings:
                additionalProperties:
                  description: AnyJSON enhances the json.RawMessages with a dedicated
                    openapi definition so that all it is correctly generated
                  x-kubernetes-preserve-unknown-fields: true
                description: 'ExportDataMappings contains a template for restructuring
                  exports. It is expected to contain a key for every blueprint-defined
                  data export. Missing keys will be defaulted to their respective
                  data export. Example: namespace: (( blueprint.exports.namespace
                  ))'
                type: object
              exports:
                description: Exports define the exported data objects and targets.
                properties:
                  data:
                    description: Data defines all data object exports.
                    items:
                      description: DataExport is a data object export.
                      properties:
                        dataRef:
                          description: DataRef is the name of the in-cluster data
                            object.
                          type: string
                        name:
                          description: Name the internal name of the imported/exported
                            data.
                          type: string
                      required:
                      - name
                      - dataRef
                      type: object
                    type: array
                  targets:
                    description: Targets defines all target exports.
                    items:
                      description: TargetExport is a single target export.
                      properties:
                        name:
                          description: Name the internal name of the exported target.
                          type: string
                        target:
                          description: Target is the name of the in-cluster target
                            object.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                type: object
              importDataMappings:
                additionalProperties:
                  description: AnyJSON enhances the json.RawMessages with a dedicated
                    openapi definition so that all it is correctly generated
                  x-kubernetes-preserve-unknown-fields: true
                description: 'ImportDataMappings contains a template for restructuring
                  imports. It is expected to contain a key for every blueprint-defined
                  data import. Missing keys will be defaulted to their respective
                  data import. Example: namespace: (( installation.imports.namespace
                  ))'
                type: object
              imports:
                description: Imports define the imported data objects and targets.
                properties:
                  data:
                    description: Data defines all data object imports.
                    items:
                      description: DataImport is a data object import.
                      properties:
                        configMapRef:
                          description: ConfigMapRef defines a data reference from
                            a configmap. This method is not allowed in installation
                            templates.
                          properties:
                            key:
                              description: Key is the name of the key in the configmap
                                that holds the data.
                              type: string
                            name:
                              description: Name is the name of the configmap
                              type: string
                          required:
                          - name
                          type: object
                        dataRef:
                          description: DataRef is the name of the in-cluster data
                            object. The reference can also be a namespaces name. E.g.
                            "default/mydataref"
                          type: string
                        name:
                          description: Name the internal name of the imported/exported
                            data.
                          type: string
                        secretRef:
                          description: SecretRef defines a data reference from a secret.
                            This method is not allowed in installation templates.
                          properties:
                            key:
                              description: Key is the name of the key in the secret
                                that holds the data.
                              type: string
                            name:
                              description: Name is the name of the secret
                              type: string
                          required:
                          - name
                          type: object
                        version:
                          description: Version specifies the imported data version.
                            defaults to "v1"
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  targets:
                    description: Targets defines all target imports.
                    items:
                      description: TargetImport is either a single target or a target
                        list import.
                      properties:
                        name:
                          description: Name the internal name of the imported target.
                          type: string
                        target:
                          description: Target is the name of the in-cluster target
                            object. Exactly one of Target, Targets, and TargetListReference
                            has to be specified.
                          type: string
                        targetListRef:
                          description: TargetListReference can (only) be used to import
                            a targetlist that has been imported by the parent installation.
                            Exactly one of Target, Targets, and TargetListReference
                            has to be specified.
                          type: string
                        targets:
                          description: Targets is a list of in-cluster target objects.
                            Exactly one of Target, Targets, and TargetListReference
                            has to be specified.
                          items:
                            type: string
                          type: array
                      required:
                      - name
                      type: object
                    type: array
                type: object
              registryPullSecrets:
                description: 'RegistryPullSecrets defines a list of registry credentials
                  that are used to pull blueprints, component descriptors and jsonschemas
                  from the respective registry. For more info see: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
                  Note that the type information is used to determine the secret key
                  and the type of the secret.'
                items:
                  description: ObjectReference is the reference to a kubernetes object.
                  properties:
                    name:
                      description: Name is the name of the kubernetes object.
                      type: string
                    namespace:
                      description: Namespace is the namespace of kubernetes object.
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - blueprint
            type: object
          status:
            description: Status contains the status of the installation.
            properties:
              automaticReconcileStatus:
                description: AutomaticReconcileStatus describes the status of automatically
                  triggered reconciles.
                properties:
                  generation:
                    description: Generation describes the generation of the installation
                      for which the status holds.
                    format: int64
                    type: integer
                  lastReconcileTime:
                    description: LastReconcileTime is the time of the last automatically
                      triggered reconcile.
                    format: date-time
                    type: string
                  numberOfReconciles:
                    description: NumberOfReconciles is the number of automatic reconciles
                      for the installation with the stored generation.
                    format: int32
                    type: integer
                  onFailed:
                    description: OnFailed is true if the last automatically triggered
                      reconcile was done for a failed installation.
                    type: boolean
                type: object
              conditions:
                description: Conditions contains the actual condition of a installation
                items:
                  description: Condition holds the information about the state of
                    a resource.
                  properties:
                    codes:
                      description: Well-defined error codes in case the condition
                        reports a problem.
                      items:
                        type: string
                      type: array
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: Last time the condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: DataType of the Shoot condition.
                      type: string
                  required:
                  - type
                  - status
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - message
                  type: object
                type: array
              configGeneration:
                description: ConfigGeneration is the generation of the exported values.
                type: string
              executionRef:
                description: ExecutionReference is the reference to the execution
                  that schedules the templated execution items.
                properties:
                  name:
                    description: Name is the name of the kubernetes object.
                    type: string
                  namespace:
                    description: Namespace is the namespace of kubernetes object.
                    type: string
                required:
                - name
                type: object
              imports:
                description: Imports contain the state of the imported values.
                items:
                  description: ImportStatus hold the state of a import.
                  properties:
                    configGeneration:
                      description: ConfigGeneration is the generation of the imported
                        value.
                      type: string
                    configMapRef:
                      description: ConfigMapRef is the name of the imported configmap.
                      type: string
                    dataRef:
                      description: DataRef is the name of the in-cluster data object.
                      type: string
                    name:
                      description: Name is the distinct identifier of the import.
                        Can be either from data or target imports
                      type: string
                    secretRef:
                      description: SecretRef is the name of the secret.
                      type: string
                    sourceRef:
                      description: SourceRef is the reference to the installation
                        from where the value is imported
                      properties:
                        name:
                          description: Name is the name of the kubernetes object.
                          type: string
                        namespace:
                          description: Namespace is the namespace of kubernetes object.
                          type: string
                      required:
                      - name
                      type: object
                    target:
                      description: Target is the name of the in-cluster target object.
                      type: string
                    targetList:
                      description: TargetList is a list of import statuses for in-cluster
                        target objects.
                      items:
                        description: TargetImportStatus
                        properties:
                          configGeneration:
                            description: ConfigGeneration is the generation of the
                              imported value.
                            type: string
                          sourceRef:
                            description: SourceRef is the reference to the installation
                              from where the value is imported
                            properties:
                              name:
                                description: Name is the name of the kubernetes object.
                                type: string
                              namespace:
                                description: Namespace is the namespace of kubernetes
                                  object.
                                type: string
                            required:
                            - name
                            type: object
                          target:
                            description: Target is the name of the in-cluster target
                              object.
                            type: string
                        type: object
                      type: array
                    type:
                      description: Type defines the kind of import. Can be either
                        DataObject, Target, or TargetList
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              importsHash:
                description: ImportsHash is the hash of the import data.
                type: string
              installationRefs:
                description: InstallationReferences contain all references to sub-components
                  that are created based on the component definition.
                items:
                  description: NamedObjectReference is a named reference to a specific
                    resource.
                  properties:
                    name:
                      description: Name is the unique name of the reference.
                      type: string
                    ref:
                      description: Reference is the reference to an object.
                      properties:
                        name:
                          description: Name is the name of the kubernetes object.
                          type: string
                        namespace:
                          description: Namespace is the namespace of kubernetes object.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - name
                  - ref
                  type: object
                type: array
              jobID:
                description: JobID is the ID of the current working request.
                type: string
              jobIDFinished:
                description: JobIDFinished is the ID of the finished working request.
                type: string
              lastError:
                description: LastError describes the last error that occurred.
                properties:
                  codes:
                    description: Well-defined error codes in case the condition reports
                      a problem.
                    items:
                      type: string
                    type: array
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: Last time the condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  operation:
                    description: Operation describes the operator where the error
                      occurred.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                required:
                - operation
                - lastTransitionTime
                - lastUpdateTime
                - reason
                - message
                type: object
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this ControllerInstallations. It corresponds to the ControllerInstallations
                  generation, which is updated on mutation by the landscaper.
                format: int64
                type: integer
              phase:
                description: InstallationPhase is the current phase of the installation.
                type: string
              phaseTransitionTime:
                description: PhaseTransitionTime is the time when the phase last changed.
                format: date-time
                type: string
            required:
            - observedGeneration
            - configGeneration
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
