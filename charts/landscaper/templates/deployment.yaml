{{/* SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors

 SPDX-License-Identifier: Apache-2.0
*/}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "landscaper.fullname" . }}
  labels:
    {{- include "landscaper.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "landscaper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include "landscaper-config" . |  sha256sum }}
        checksum/registrysecrets: {{ toJson .Values.landscaper.registryConfig |  sha256sum }}
        {{ range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value}}
        {{- end }}
      labels:
        {{- include "landscaper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "landscaper.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - "--config=/app/ls/config/config.yaml"
          {{- if .Values.landscaper.deployers }}
          - "--deployers={{  .Values.landscaper.deployers | join "," }}"
          {{- end }}
          {{- if .Values.landscaper.deployersConfig }}
          - "--deployers-config=/app/ls/deployers/deployers-config.yaml"
          {{- end }}
          {{- if .Values.landscaper.metrics }}
          ports:
          - name: metrics
            containerPort: {{ .Values.landscaper.metrics.port }}
          {{- end}}
          - --webhook-service={{ .Release.Namespace }}/{{ include "landscaper.fullname" . }}
          {{- if not (has "all" .Values.disableWebhooks) }}
          - --webhook-service-port={{ .Values.webhookConfig.servicePort }}
          {{- end }}
          - --disable-webhooks={{ .Values.disableWebhooks | join "," }}
          volumeMounts:
          - name: oci-cache
            mountPath: /app/ls/oci-cache
          - name: config
            mountPath: /app/ls/config
          {{- if .Values.landscaper.registryConfig.secrets }}
          - name: registrypullsecrets
            mountPath: /app/ls/registry/secrets
          {{- end }}
          {{- if .Values.landscaper.deployersConfig }}
          - name: deployers-config
            mountPath: /app/ls/deployers
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: oci-cache
        emptyDir: {}
      - name: config
        secret:
          secretName: {{ include "landscaper.fullname" . }}-config
      {{- if .Values.landscaper.registryConfig.secrets }}
      - name: registrypullsecrets
        secret:
          secretName: {{ include "landscaper.fullname" . }}-registry
      {{- end }}
      {{- if .Values.landscaper.deployersConfig }}
      - name: config
        secret:
          secretName: {{ include "landscaper.fullname" . }}-deployers-config
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
