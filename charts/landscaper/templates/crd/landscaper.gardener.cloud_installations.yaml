apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.1-0.20200517180335-820a4a27ea84
  creationTimestamp: null
  name: installations.landscaper.gardener.cloud
spec:
  group: landscaper.gardener.cloud
  names:
    kind: Installation
    listKind: InstallationList
    plural: installations
    shortNames:
    - inst
    singular: installation
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.configGeneration
      name: ConfigGen
      type: integer
    - jsonPath: .status.executionRef.name
      name: Execution
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Blueprint contains the configuration of a component
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the specification for a installation.
            properties:
              blueprint:
                description: Blueprint is the resolved reference to the definition.
                properties:
                  inline:
                    description: Inline defines a inline yaml filesystem with a blueprint.
                    properties:
                      cdRef:
                        description: ComponentDescriptorReference is the reference to a component descriptor
                        properties:
                          componentName:
                            description: ComponentName defines the unique of the component containing the resource.
                            type: string
                          repositoryContext:
                            description: RepositoryContext defines the context of the component repository to resolve blueprints.
                            properties:
                              baseUrl:
                                description: BaseURL is the base url of the repository to resolve components.
                                type: string
                              type:
                                description: Type defines the type of the component repository to resolve references.
                                type: string
                            required:
                            - baseUrl
                            - type
                            type: object
                          version:
                            description: Version defines the version of the component.
                            type: string
                        required:
                        - componentName
                        - version
                        type: object
                      filesystem:
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - filesystem
                    type: object
                  ref:
                    description: Reference defines a remote reference to a blueprint
                    properties:
                      componentName:
                        description: ComponentName defines the unique of the component containing the resource.
                        type: string
                      repositoryContext:
                        description: RepositoryContext defines the context of the component repository to resolve blueprints.
                        properties:
                          baseUrl:
                            description: BaseURL is the base url of the repository to resolve components.
                            type: string
                          type:
                            description: Type defines the type of the component repository to resolve references.
                            type: string
                        required:
                        - baseUrl
                        - type
                        type: object
                      resourceName:
                        description: ResourceName defines the name of the resource.
                        type: string
                      version:
                        description: Version defines the version of the component.
                        type: string
                    required:
                    - componentName
                    - resourceName
                    - version
                    type: object
                type: object
              exportDataMappings:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: 'ExportDataMappings contains a template for restructuring exports. It is expected to contain a key for every blueprint-defined data export. Missing keys will be defaulted to their respective data export. Example: namespace: (( blueprint.exports.namespace ))'
                type: object
              exports:
                description: Exports define the exported data objects and targets.
                properties:
                  data:
                    description: Data defines all data object exports.
                    items:
                      description: DataImportExport is a data object export.
                      properties:
                        dataRef:
                          description: DataRef is the name of the in-cluster data object.
                          type: string
                        name:
                          description: Name the internal name of the imported/exported data.
                          type: string
                      required:
                      - dataRef
                      - name
                      type: object
                    type: array
                  targets:
                    description: Targets defines all target exports.
                    items:
                      description: TargetImportExport is a target import/export.
                      properties:
                        name:
                          description: Name the internal name of the imported/exported target.
                          type: string
                        target:
                          description: Target is the name of the in-cluster target object.
                          type: string
                      required:
                      - name
                      - target
                      type: object
                    type: array
                type: object
              importDataMappings:
                additionalProperties:
                  x-kubernetes-preserve-unknown-fields: true
                description: 'ImportDataMappings contains a template for restructuring imports. It is expected to contain a key for every blueprint-defined data import. Missing keys will be defaulted to their respective data import. Example: namespace: (( installation.imports.namespace ))'
                type: object
              imports:
                description: Imports define the imported data objects and targets.
                properties:
                  data:
                    description: Data defines all data object imports.
                    items:
                      description: DataImport is a data object import.
                      properties:
                        configMapRef:
                          description: ConfigMapRef defines a data reference from a configmap. This method is not allowed in installation templates.
                          properties:
                            key:
                              description: Key is the name of the key in the configmap that holds the data.
                              type: string
                            name:
                              description: Name is the name of the kubernetes object.
                              type: string
                            namespace:
                              description: Namespace is the namespace of kubernetes object.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        dataRef:
                          description: DataRef is the name of the in-cluster data object. The reference can also be a namespaces name. E.g. "default/mydataref"
                          type: string
                        name:
                          description: Name the internal name of the imported/exported data.
                          type: string
                        secretRef:
                          description: SecretRef defines a data reference from a secret. This method is not allowed in installation templates.
                          properties:
                            key:
                              description: Key is the name of the key in the secret that holds the data.
                              type: string
                            name:
                              description: Name is the name of the kubernetes object.
                              type: string
                            namespace:
                              description: Namespace is the namespace of kubernetes object.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        version:
                          description: Version specifies the imported data version. defaults to "v1"
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  targets:
                    description: Targets defines all target imports.
                    items:
                      description: TargetImportExport is a target import/export.
                      properties:
                        name:
                          description: Name the internal name of the imported/exported target.
                          type: string
                        target:
                          description: Target is the name of the in-cluster target object.
                          type: string
                      required:
                      - name
                      - target
                      type: object
                    type: array
                type: object
              registryPullSecrets:
                description: 'RegistryPullSecrets defines a list of registry credentials that are used to pull blueprints, component descriptors and jsonschemas from the respective registry. For more info see: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/ Note that the type information is used to determine the secret key and the type of the secret.'
                items:
                  description: ObjectReference is the reference to a kubernetes object.
                  properties:
                    name:
                      description: Name is the name of the kubernetes object.
                      type: string
                    namespace:
                      description: Namespace is the namespace of kubernetes object.
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
                type: array
            required:
            - blueprint
            type: object
          status:
            description: Status contains the status of the installation.
            properties:
              conditions:
                description: Conditions contains the actual condition of a installation
                items:
                  description: Condition holds the information about the state of a resource.
                  properties:
                    codes:
                      description: Well-defined error codes in case the condition reports a problem.
                      items:
                        description: ErrorCode is a string alias.
                        type: string
                      type: array
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: Last time the condition was updated.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: DataType of the Shoot condition.
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              configGeneration:
                description: ConfigGeneration is the generation of the exported values.
                type: string
              executionRef:
                description: ExecutionReference is the reference to the execution that schedules the templated execution items.
                properties:
                  name:
                    description: Name is the name of the kubernetes object.
                    type: string
                  namespace:
                    description: Namespace is the namespace of kubernetes object.
                    type: string
                required:
                - name
                - namespace
                type: object
              imports:
                description: Imports contain the state of the imported values.
                items:
                  description: ImportStatus hold the state of a import.
                  properties:
                    configGeneration:
                      description: ConfigGeneration is the generation of the imported value.
                      type: string
                    configMapRef:
                      description: ConfigMapRef is the name of the imported configmap.
                      type: string
                    dataRef:
                      description: DataRef is the name of the in-cluster data object.
                      type: string
                    name:
                      description: Name is the distinct identifier of the import. Can be either from data or target imports
                      type: string
                    secretRef:
                      description: SecretRef is the name of the secret.
                      type: string
                    sourceRef:
                      description: SourceRef is the reference to the installation where the value is imported
                      properties:
                        name:
                          description: Name is the name of the kubernetes object.
                          type: string
                        namespace:
                          description: Namespace is the namespace of kubernetes object.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    target:
                      description: Target is the name of the in-cluster target object.
                      type: string
                    type:
                      description: Type defines the kind of import. Can be either DataObject or Target
                      type: string
                  required:
                  - configGeneration
                  - name
                  - type
                  type: object
                type: array
              installationRefs:
                description: InstallationReferences contain all references to sub-components that are created based on the component definition.
                items:
                  description: NamedObjectReference is a named reference to a specific resource.
                  properties:
                    name:
                      description: Name is the unique name of the reference.
                      type: string
                    ref:
                      description: Reference is the reference to an object.
                      properties:
                        name:
                          description: Name is the name of the kubernetes object.
                          type: string
                        namespace:
                          description: Namespace is the namespace of kubernetes object.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                  required:
                  - name
                  - ref
                  type: object
                type: array
              lastError:
                description: LastError describes the last error that occurred.
                properties:
                  codes:
                    description: Well-defined error codes in case the condition reports a problem.
                    items:
                      description: ErrorCode is a string alias.
                      type: string
                    type: array
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: Last time the condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about the transition.
                    type: string
                  operation:
                    description: Operation describes the operator where the error ocurred.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                required:
                - lastTransitionTime
                - lastUpdateTime
                - message
                - operation
                - reason
                type: object
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed for this ControllerInstallations. It corresponds to the ControllerInstallations generation, which is updated on mutation by the landscaper.
                format: int64
                type: integer
              phase:
                description: Phase is the current phase of the installation.
                type: string
            required:
            - configGeneration
            - observedGeneration
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
