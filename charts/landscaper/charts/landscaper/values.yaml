# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

# Default values for landscaper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

landscaper:
  verbosity: info

  controllers:
    # syncPeriod: 10h
    installations:
      workers: 30
      # cacheSyncTimeout: 2m
    executions:
      workers: 30
      # cacheSyncTimeout: 2m
    deployItems:
      workers: 5
      # cacheSyncTimeout: 2m
    componentOverwrites:
      workers: 5
      # cacheSyncTimeout: 2m
    context:
      workers: 5
      # cacheSyncTimeout: 2m
      config:
        default:
          #  The default repositoryContext that will be used if no repositoryContext is defined in an installation
          #  repositoryContext:
          #    type: "ociRegistry"
          #    baseUrl: ""
          disable: false
          excludeNamespaces:
          - kube-system # by default exclude the kube-system namespace

  crdManagement:
    deployCrd: true
#   forceUpdate: true
  truststore:  # can be used to add certificates to the trust store of the landscaper
    secrets: {} # contains certificates (optionally in a single or multiple secrets)
  registryConfig: # contains optional oci secrets
    cache: {}
#      useInMemoryOverlay: false
    allowPlainHttpRegistries: false
    insecureSkipVerify: false
    secrets: {}
#     <name>: <docker config json>

  # burst and max queries per second settings for k8s client used in reconciliation
  k8sClientSettings:
    # settings of client for host cluster; are overwritten by settings for resourceClient if host and resource cluster are identical
    hostClient:
      burst: 30
      qps: 20

    # settings of client for resource cluster
    resourceClient:
      burst: 60
      qps: 40

#  metrics:
#    port: 8080

#  if a "deployerManagement.agent.name" is specified, the length of the name may not exceed 30
#  deployerManagement:
#    disable: false
#    agent:
#      disable: false

  deployers: []
#  - container
#  - helm
#  - mock
#  - manifest
  deployersConfig: {}
#    Deployers:
#      container:
#        container-helm chart values
#        ...
#      my-custom-deployer:
#        apiVersion: landscaper.gardener.cloud/v1alpha1
#        kind: DeployerRegistration
#        ...

  useOCMLib: false

  deployItemTimeouts:
    # how long deployers may take to react on changes to deploy items
    pickup: 60m
    # default for how long deployers may take to process a deploy item before failing, can be overwritten via the deploy item's 'spec.timeout' field
    progressingDefault: 10m

#  healthCheck:
#    name: "test"
#    additionalDeployments:
#      deployments:
#        - "deploymentname"

image: {}
   # Overrides the image tag whose default is the chart appVersion.
#  tag: ""

controller:
  # Overrides the controller container name. Default is "landscaper-controller".
  containerName: landscaper-controller

  # Allows to target a different cluster than the hosting cluster of the controller instance.
  # Provide the kubeconfig to access the remote Landscaper cluster here (inline or via secretRef).
  # When providing a secretRef, see ./templates/cluster-kubeconfig-secret.yaml for the correct secret format.
  # If no value is provided at all, the controller will default to the in-cluster kubeconfig.
  landscaperKubeconfig: {}
  #   secretRef: my-kubeconfig-secret
  #   kubeconfig: |
  #     <cluster-kubeconfig>

  replicaCount: 1
  image:
    repository: eu.gcr.io/gardener-project/landscaper/landscaper-controller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the .Values.image.tag or chart appVersion.
    #tag: ""

webhooksServer:
  # Overrides the controller container name. Default is "landscaper-webhooks".
  containerName: landscaper-webhooks
  # Allows to target a different cluster than the hosting cluster of the webhooks server instance.
  # Provide the kubeconfig to access the remote Landscaper cluster here (inline or via secretRef).
  # When providing a secretRef, see ./templates/cluster-kubeconfig-secret.yaml for the correct secret format.
  # If no value is provided at all, the webhooks server will default to the in-cluster kubeconfig.
  landscaperKubeconfig: {}
  #   secretRef: my-kubeconfig-secret
  #   kubeconfig: |
  #     <cluster-kubeconfig>

  replicaCount: 2
  image:
    repository: eu.gcr.io/gardener-project/landscaper/landscaper-webhooks-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the .Values.image.tag or the chart appVersion.
    #tag: ""

  servicePort: 9443 # required unless disableWebhooks contains "all"
  disableWebhooks: [] # options: installation, deployitem, execution, all
  # Specify the namespace where the webhooks server certificate secret is stored.
  # Required when "landscaperKubeconfig" is defined.
  certificatesNamespace: ""

  # Specify to create a webhooks server ingress in combination with "landscaperKubeconfig".
  # This is needed when the webhooks server pod is placed on a different cluster than the landscaper resources.
  # ingress:
  #   host: webhooks.ingress.mydomain.net
  #   className: nginx
  #   # enable the gardener dns extension to create a DNS entry for this ingress.
  #   dns:
  #     class: garden

  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    # limits:
    #   cpu: 100m
    #   memory: 128Mi

  hpa:
    maxReplicas: 10
    averageCpuUtilization: 80
    averageMemoryUtilization: 80

    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 80
      - type: Resource
        resource:
          name: memory
          target:
            type: Utilization
            averageUtilization: 80


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

global:
  serviceAccount:
    controller:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, the default will be "landscaper"
      name: ""
    webhooksServer:
      # The name of the service account to use.
      # If not set and create is true, the default will be "landscaper-webhooks"
      name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

resourcesMain:
  requests:
    cpu: 300m
    memory: 300Mi

hpaMain:
  maxReplicas: 1
  averageCpuUtilization: 80
  averageMemoryUtilization: 80

nodeSelector: {}

tolerations: []

affinity: {}
