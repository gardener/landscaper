#!/bin/bash

# SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset
set -o pipefail

# This script executes the following steps:
#
# - create-shoot-cluster: Creates a new test shoot cluster in the Gardener Canary Landscape in the namespace provided
#   with $2 (e.g. garden-hubtest) using the kubeconfig located at the file system path provided by $1. The names of all
#   test shoot clusters starts with the prefix "it-".
#
# - create-registry: Creates an OCI registry in the new test shoot cluster.
#
# - install-missing-software: Installs potentially missing software for the subsequent steps.
#
# - install-landscaper: Installs the landscaper on the new test shoot cluster.
#
# - run-tests: Executes the integration tests on the new test shoot cluster.
#
# - delete-shoot-cluster: Deletes the test shoot cluster if all tests succeeded.
#
# $3 contains the version of the landscaper to be installed. This version is also used in some integration tests.
#
# Currently, the script could not be run against another Gardener landscape than Canary because there is some hard coded
# stuff in the shoot manifest used to create new test shoot clusters.
#
# Before a new test shoot cluster is created, the already existing test clusters in the namespace are checked and
# potentially deleted according to the following strategy:
# - If the maximal number of test clusters is larger or equal to $4, the script fails and it is required
#   that the test clusters are deleted manually.
# - $6 provides a duration according to the format expected by time.ParseDuration (https://pkg.go.dev/time#ParseDuration).
#   All test clusters older than this duration are deleted.
# - If there are still X test clusters with 'X >= $5', the oldest 'X - $5 + 1' test clusters are deleted.
# - The algorithm does not wait until deleted clusters are removed. It just triggers the deletion and continues with
#   the tests.

GARDENER_KUBECONFIG_PATH=$1
NAMESPACE=$2
VERSION=$3
MAX_NUM_CLUSTERS=$4
NUM_CLUSTERS_START_DELETE_OLDEST=$5
DURATION_FOR_CLUSTER_DELETION=$6


SOURCE_PATH="$(dirname $0)/.."
cd "${SOURCE_PATH}"
SOURCE_PATH="$(pwd)"

echo "Run integration tests with cluster creation and registry creation"
echo "Source path: ${SOURCE_PATH}"
echo "Gardener kubeconfig path: ${GARDENER_KUBECONFIG_PATH}"
echo "Shoot cluster namespace: ${NAMESPACE}"
echo "Landscaper version: ${VERSION}"

TMP="${SOURCE_PATH}/tmp-int-test"
rm -f -r $TMP
mkdir -p $TMP
echo "Config directory: ${TMP}"

./.ci/int-test-helper/create-shoot-cluster $GARDENER_KUBECONFIG_PATH \
  $NAMESPACE \
  $TMP \
  $MAX_NUM_CLUSTERS \
  $NUM_CLUSTERS_START_DELETE_OLDEST \
  $DURATION_FOR_CLUSTER_DELETION

KUBECONFIG_PATH=$TMP/kubeconfig.yaml
echo "Test cluster kubeconfig path: ${KUBECONFIG_PATH}"

./.ci/int-test-helper/create-registry $KUBECONFIG_PATH $TMP
./.ci/int-test-helper/install-missing-software
./.ci/int-test-helper/install-landscaper $KUBECONFIG_PATH $VERSION $TMP
./.ci/int-test-helper/run-tests $KUBECONFIG_PATH $TMP/docker.config $VERSION
./.ci/int-test-helper/delete-shoot-cluster $GARDENER_KUBECONFIG_PATH $NAMESPACE $TMP
