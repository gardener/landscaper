#!/bin/bash

# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset
set -o pipefail

KUBECONFIG_PATH=$1
VERSION=$2
TMP=$3
USE_OCM_LIB=$4

SOURCE_PATH="$(dirname $0)/../.."
cd "${SOURCE_PATH}"
SOURCE_PATH="$(pwd)"

echo "Install landscaper version ${VERSION} and kubeconfig $KUBECONFIG_PATH"

TMP_GEN="$TMP/gen"
mkdir -p $TMP_GEN

echo "> Installing Landscaper version ${VERSION}"

printf "
landscaper:
  landscaper:
    deployers:
    - container
    - helm
    - manifest
    - mock
    deployersConfig:
      Deployers:
        container:
          deployer:
            verbosityLevel: debug
        helm:
          deployer:
            verbosityLevel: debug
        manifest:
          deployer:
            verbosityLevel: debug
    deployItemTimeouts:
      pickup: 30s
      abort: 30s
    useOCMLib: $USE_OCM_LIB
" > $TMP/values.yaml

touch $TMP/registry-values.yaml
if [[ -f "$TMP/docker.config" ]]; then
  printf "
landscaper:
  landscaper:
    truststore:
      secrets:
        registryCA: |
$(cat "$TMP/cacerts.crt" | sed "s/^/          /")
    registryConfig:
      allowPlainHttpRegistries: false
      insecureSkipVerify: true
      secrets:
        default: $(cat "$TMP/docker.config")
  " > $TMP/registry-values.yaml
fi

echo "Pull landscaper helm chart"
export HELM_EXPERIMENTAL_OCI=1
helm pull oci://eu.gcr.io/gardener-project/landscaper/charts/landscaper --version $VERSION --untar --destination $TMP_GEN

echo "Upgrade landscaper"
helm upgrade --kubeconfig=$KUBECONFIG_PATH --install --wait --create-namespace -n ls-system \
  -f $TMP/values.yaml -f $TMP/registry-values.yaml landscaper $TMP_GEN/landscaper --set "landscaper.image.tag=${VERSION}"


