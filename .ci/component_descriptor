#!/bin/bash

# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset
set -o pipefail

if ! COMP_CLI=$(which component-cli); then
  echo -n "component-cli is required to generate the component descriptors"
  echo -n "Trying to installing it..."
  CLI_PATH="$(mktemp -d)"
  COMP_CLI=${CLI_PATH}/component-cli
  curl -L https://github.com/gardener/component-cli/releases/download/$(curl -s https://api.github.com/repos/gardener/component-cli/releases/latest | jq -r '.tag_name')/componentcli-$(go env GOOS)-$(go env GOARCH).gz | gzip -d > ${COMP_CLI}
  chmod +x ${COMP_CLI}

  if ! which component-cli 1>/dev/null; then
    echo -n "component-cli was successfully installed but the binary cannot be found"
    echo -n "Try adding the \$GOPATH/bin to your \$PATH..."
    exit 1
  fi
fi

SOURCE_PATH="$(dirname $0)/.."
VERSION="$(${SOURCE_PATH}/hack/get-version.sh)"
COMMIT_SHA="$(git --git-dir ${SOURCE_PATH}/.git rev-parse HEAD)"

printf "> Building components with version ${VERSION} - ${COMMIT_SHA}\n"

REPO_CTX="${CURRENT_COMPONENT_REPOSITORY}"

# creates a component archive for deployer
# it expects 1 argument with
# $1 is the name of the component
function buildComponentArchive() {
  COMPONENT_NAME=$1
  CA_PATH="$(mktemp -d)"
  printf "> Building component ${COMPONENT_NAME}\n"

  COMPONENT_REFERENCES=""

  if [ -f ${SOURCE_PATH}/.landscaper/${COMPONENT_NAME}/component-references.yaml ]; then
    COMPONENT_REFERENCES="-c ${SOURCE_PATH}/.landscaper/${COMPONENT_NAME}/component-references.yaml"
  fi

  ${COMP_CLI} ca "${CA_PATH}" "${CTF_PATH}" \
    --component-name=github.com/gardener/landscaper/${COMPONENT_NAME} \
    --component-version=${VERSION} \
    --repo-ctx=${REPO_CTX} \
    -s ${SOURCE_PATH}/.landscaper/sources.yaml \
    -r ${SOURCE_PATH}/.landscaper/${COMPONENT_NAME}/resources.yaml \
    COMMIT_SHA=${COMMIT_SHA} \
    VERSION=${VERSION} \
    $COMPONENT_REFERENCES
}

buildComponentArchive "container-deployer"
buildComponentArchive "helm-deployer"
buildComponentArchive "manifest-deployer"
buildComponentArchive "mock-deployer"

# add landscaper component descriptor
printf "> Create Landscaper ca archive\n"
LS_CA_PATH="$(mktemp -d)"
cp ${BASE_DEFINITION_PATH} "${LS_CA_PATH}/component-descriptor.yaml"

printf "> add resources\n"
${COMP_CLI} ca resources add ${LS_CA_PATH} \
    VERSION=${VERSION} \
    ${SOURCE_PATH}/.landscaper/resources.yaml

printf "> add component references\n"
${COMP_CLI} ca component-references add ${LS_CA_PATH} \
    VERSION=${VERSION} \
    ${SOURCE_PATH}/.landscaper/component-references.yaml

cat ${LS_CA_PATH}/component-descriptor.yaml

printf "> Add Landscaper CA to ctf\n"
${COMP_CLI} ctf add "${CTF_PATH}" -f "${LS_CA_PATH}"

# also upload the components to a open source repo
# todo: remove as soon as the default component repository is public
${COMP_CLI} ctf push --repo-ctx="eu.gcr.io/gardener-project/development" "${CTF_PATH}"

