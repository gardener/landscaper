# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

landscaper:
  template: 'default'
  base_definition:
    repo: ~
    traits:
      version:
        preprocess: 'inject-commit-hash'
        inject_effective_version: true
      component_descriptor:
        ctx_repository: landscaper
        snapshot_ctx_repository: landscaper
      publish:
        dockerimages:
          landscaper-controller:
            registry: 'gcr-readwrite'
            target: 'landscaper-controller'
            image: eu.gcr.io/gardener-project/landscaper/landscaper-controller
          landscaper-webhooks-server:
            registry: 'gcr-readwrite'
            target: 'landscaper-webhooks-server'
            image: eu.gcr.io/gardener-project/landscaper/landscaper-webhooks-server
          landscaper-agent:
            registry: 'gcr-readwrite'
            target: 'landscaper-agent'
            image: eu.gcr.io/gardener-project/landscaper/landscaper-agent
          helm-deployer-controller:
            registry: 'gcr-readwrite'
            target: 'helm-deployer-controller'
            image: eu.gcr.io/gardener-project/landscaper/helm-deployer-controller
          manifest-deployer-controller:
            registry: 'gcr-readwrite'
            target: 'manifest-deployer-controller'
            image: eu.gcr.io/gardener-project/landscaper/manifest-deployer-controller
          container-deployer-controller:
            registry: 'gcr-readwrite'
            target: 'container-deployer-controller'
            image: eu.gcr.io/gardener-project/landscaper/container-deployer-controller
          container-deployer-init:
            registry: 'gcr-readwrite'
            target: 'container-deployer-init'
            image: eu.gcr.io/gardener-project/landscaper/container-deployer-init
          container-deployer-wait:
            registry: 'gcr-readwrite'
            target: 'container-deployer-wait'
            image: eu.gcr.io/gardener-project/landscaper/container-deployer-wait
          mock-deployer-controller:
            registry: 'gcr-readwrite'
            target: 'mock-deployer-controller'
            image: eu.gcr.io/gardener-project/landscaper/mock-deployer-controller
    steps:
      verify:
        image: 'golang:1.20.6'
      publish-helm-charts:
        depends:
        - verify

  jobs:
    head-update:
      traits:
        draft_release: ~
        notifications:
          default:
            on_error:
              triggering_policy: 'always'
              recipients:
              - committers
              - codeowners
      steps:
        integration_test_cnudie:
          execute:
          - integration-test
          - false
          trait_depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
        integration_test_ocm:
          execute:
          - integration-test
          - true
          trait_depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
    pull-request:
      steps:
        integration_test_cnudie:
          depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
          execute:
          - integration-test-new
          - false
        integration_test_ocm:
          depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
          execute:
          - integration-test-new
          - true
      traits:
        pull-request: ~
        draft_release: ~
        options:
          public_build_logs: True
    release:
      traits:
        version:
          preprocess: 'finalize'
        release:
          nextversion: 'bump_minor'
          release_callback: '.ci/release'
          next_version_callback: '.ci/next_version'
          git_tags:
          - ref_template: 'refs/tags/{VERSION}'
          - ref_template: 'refs/tags/apis/{VERSION}'
          - ref_template: 'refs/tags/controller-utils/{VERSION}'
      steps:
        integration_test_cnudie:
          execute:
          - integration-test
          - false
          trait_depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
        integration_test_ocm:
          execute:
          - integration-test
          - true
          trait_depends:
          - publish
          image: 'eu.gcr.io/gardener-project/landscaper-service/integration-test:1.20.6-alpine3.18'
        update_release:
          inputs:
            INTEGRATION_TEST_PATH: integration_test_path
          execute:
          - update_release.py
          trait_depends:
          - release
          depends:
          - integration_test_cnudie
          - integration_test_ocm
