# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint

jsonSchema: "https://json-schema.org/draft/2019-09/schema" # required

imports:
- name: providers
  optional: true
  schema:
    type: array
    items:
      $ref: cd://componentReferences/schemas/localResources/schemas#definitions/provider # cd://componentReferences/github.com/gardener/external-dns-management-schemas/localResources/schemas#definitions/provider

- name: dnsClass
  optional: true
  schema:
    type: string

- name: identifier
  optional: true
  example: ... # optional
  schema:
    description: ""
    type: string
- name: namespace
  default:
    value: kube-system
  schema:
    type: string

- name: cluster
  targetType: landscaper.cloud/kubernetes-cluster # schema definition
  subTypes:
    - gardener
    - seed

exports:
- name: dnsClass
  schema:
    type: string

- name: myTarget
  targetType: landscaper.cloud/kubernetes-cluster

# List of deploy item generators
# The generators return list of deploy items that are aggregated.
# Be aware that all deploy items must have a unique key
# otherwise the aggregation will return an error.
deployExecutions:
# - type: go-template
#   file: /my/path/cc # virtual filesystem
#   template: |
#     my template: {{ .Values.abc }}

# - type: container
#   image: localResource/my-templater
#   command: "asdf"

- name: my-exec
  type: spiff
  stubs:
  - "/my/stubfile/..."
  - "cd://componentReference/my-other-comp/localResource/..."
  file: /installer.yaml # virtual filesystem
  # template:
  #   a:
  #     b: (( readFile() ))

exportExecutions:
# - type: go-template # returns list of deploy items
#   file: /my/path/cc # virtual filesystem
#   template: |
#     my template: {{ .Values.abc }}
 - type: go-template
   template: |
     dnsClass: {{ .deployitem.installer.myexports }}
     url: https://{{ .deployitem.installer.myexports }}:{{ .dataobjects.port }}
