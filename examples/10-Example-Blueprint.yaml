# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint

jsonSchemaVersion: ""

imports:
- name: dnsControllerClass | common.dnsControllerClass
  schema:
    type: string
  default:
    value: ""
#      ref: common.dnsControllerClass # tbd
- name: abc
  schema:
    type: number

exports:
- name: a.b
  schema:
    type: object
    properties:
      mykey:
        type: string
- key: ijk
  schema:
    type: number

subinstallations:
- apiVersion: landscaper.gardener.cloud/v1alpha1
  kind: InstallationTemplate
  name: my-sub-component

  blueprint:
    ref: cd://localResources/my-blueprint
#    filesystem:
#      blueprint.yaml: |
#        apiVersion: landscaper.gardener.cloud/v1alpha1
#        kind: Blueprint
#        ...

  imports:
    data: []
    targets: []

  exports:
    data: [ ]
    targets: [ ]

- file: /path/to/installation-template # must be inside the blueprints filesystem

deployExecutors: # has to be idempotent
- name: default # has to return a list of deploy item templates
  type: GoTemplate
  template: |
    deployItems:
    - name: init
      type: landscaper.gardener.cloud/container
      config:
        apiVersion: container.deployer.landscaper.gardener.cloud/v1alpha1
        kind: ProviderConfiguration
        image: my-custom-image:version
        command: ["run-component"]
        args: []
    - name: my-container
      type: landscaper.gardener.cloud/container
      config:
        apiVersion: container.deployer.landscaper.gardener.cloud/v1alpha1
        kind: ProviderConfiguration
        image: my-custom-image:version
        command: ["run-component"]
        args: []
    - name: deploy-chart
      type: landscaper.gardener.cloud/helm
      config:
        apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
        kind: ProviderConfiguration
        chart:
          ref: my-repo:1.0.0
        values: {{ .exports.mykey.x }}

exportExecutors:
- name: default # has to return a list of deploy item templates
  type: GoTemplate
  template: |
    exports:
      a.b: {{ .exports.deployitems.my-script.mykey }} # template from own deploy items
      ijk: {{ .exports.dataobjects.my-sub-component.ijk }} # export from sub installations
# - type: go-template
#   file: /my/path/cc # virtual filesystem
#   template: |
#     my template: {{ .Values.abc }}
#
# - type: container
#   image: localResource/my-templater
#   command: "asdf"
#
#- name: my-exec
#  type: spiff
#  stubs:
#  - "/my/stubfile/..."
#  - "cd://componentReference/my-other-comp/localResource/..."
#  file: /installer.yaml # virtual filesystem
# template:
#   a:
#     b: (( readFile() ))
