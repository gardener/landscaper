{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "definitions": {
    "core-v1-ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "utils-managedresource-ManagedResourceStatus": {
      "description": "ManagedResourceStatus describes the managed resource and their metadata.",
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "annotateBeforeDelete": {
          "description": "AnnotateBeforeDelete defines annotations that are being set before the manifest is being deleted.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "policy": {
          "description": "Policy defines the manage policy for that resource.",
          "type": "string"
        },
        "resource": {
          "description": "Resources describes the managed kubernetes resource.",
          "default": {},
          "$ref": "#/definitions/core-v1-ObjectReference"
        }
      }
    }
  },
  "description": "ProviderStatus is the helm provider specific status",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "managedResources": {
      "description": "ManagedResources contains all kubernetes resources that are deployed by the helm deployer.",
      "items": {
        "$ref": "#/definitions/utils-managedresource-ManagedResourceStatus",
        "default": {}
      },
      "type": "array"
    }
  },
  "title": "deployer-helm-ProviderStatus",
  "type": "object"
}