{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "definitions": {
    "core-v1alpha1-Duration": {
      "description": "Duration is a wrapper for time.Duration that implements JSON marshalling and openapi scheme.",
      "type": "string"
    },
    "pkg-runtime-RawExtension": {
      "description": "RawExtension is used to hold extensions in external versions.\n\nTo use this, make a field which has RawExtension as its type in your external, versioned struct, and Object in your internal struct. You also need to register your various plugin types.\n\n// Internal package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.Object `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// External package:\n\n\ttype MyAPIObject struct {\n\t\truntime.TypeMeta `json:\",inline\"`\n\t\tMyPlugin runtime.RawExtension `json:\"myPlugin\"`\n\t}\n\n\ttype PluginA struct {\n\t\tAOption string `json:\"aOption\"`\n\t}\n\n// On the wire, the JSON will look something like this:\n\n\t{\n\t\t\"kind\":\"MyAPIObject\",\n\t\t\"apiVersion\":\"v1\",\n\t\t\"myPlugin\": {\n\t\t\t\"kind\":\"PluginA\",\n\t\t\t\"aOption\":\"foo\",\n\t\t},\n\t}\n\nSo what happens? Decode first uses json or yaml to unmarshal the serialized data into your external MyAPIObject. That causes the raw JSON to be stored, but not unpacked. The next step is to copy (using pkg/conversion) into the internal struct. The runtime package's DefaultScheme has conversion functions installed which will unpack the JSON stored in RawExtension, turning it into the correct object type, and storing it in the Object. (TODO: In the case where the object is of an unknown type, a runtime.Unknown object will be created and stored.)",
      "type": "object"
    },
    "utils-continuousreconcile-ContinuousReconcileSpec": {
      "description": "ContinuousReconcileSpec represents the specification of a continuous reconcile schedule.",
      "type": "object",
      "properties": {
        "cron": {
          "description": "Cron is a standard crontab specification of the reconciliation schedule. Either Cron or Every has to be specified.",
          "type": "string"
        },
        "every": {
          "description": "Every specifies a delay after which the reconcile should happen. Either Cron or Every has to be specified.",
          "$ref": "#/definitions/core-v1alpha1-Duration"
        }
      }
    }
  },
  "description": "ProviderConfiguration is the mock deployer configuration that is expected in a DeployItem",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "continuousReconcile": {
      "$ref": "#/definitions/utils-continuousreconcile-ContinuousReconcileSpec",
      "description": "ContinuousReconcile contains the schedule for continuous reconciliation."
    },
    "export": {
      "description": "Export sets the exported configuration to the given value",
      "format": "byte",
      "type": "string"
    },
    "initialPhase": {
      "description": "InitialPhase sets the phase of the DeployItem, but only if it is empty or \"Init\" Additionally, setting it will suppress the DeployItem phase being set to \"Succeeded\" after successful reconciliation",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "phase": {
      "description": "Phase sets the phase of the DeployItem",
      "type": "string"
    },
    "providerStatus": {
      "$ref": "#/definitions/pkg-runtime-RawExtension",
      "description": "ProviderStatus sets the provider status to the given value"
    }
  },
  "title": "deployer-mock-ProviderConfiguration",
  "type": "object"
}