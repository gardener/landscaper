apiVersion: landscaper.gardener.cloud/v1alpha1
kind: Blueprint

imports:
- name: cluster
  type: target
  targetType: landscaper.gardener.cloud/kubernetes-cluster
- name: landscaperCluster
  type: target
  targetType: landscaper.gardener.cloud/kubernetes-cluster
  required: false
- name: releaseName
  type: data
  schema:
    type: string
- name: releaseNamespace
  type: data
  schema:
    type: string
- name: identity
  type: data
  required: false
  schema:
    type: string
- name: values
  type: data
  schema:
    description: "values for the helm-deployer Helm Chart. See `https://github.com/gardener/landscaper/blob/master/charts/helm-deployer/values.yaml`"
    type: object
- name: targetSelectors
  type: data
  required: false
  schema:
    type: array
    items:
      type: object
      properties:
        targets:
          type: array
          items:
            type: object
        annotations:
          type: array
          items:
            type: object
        labels:
          type: array
          items:
            type: object

deployExecutions:
- name: default
  type: GoTemplate
  template: |
    deployItems:
    - name: deploy
      type: landscaper.gardener.cloud/helm
      target:
        name: {{ .imports.cluster.metadata.name }}
        namespace: {{ .imports.cluster.metadata.namespace }}
      config:
        apiVersion: helm.deployer.landscaper.gardener.cloud/v1alpha1
        kind: ProviderConfiguration
        updateStrategy: update
        name: {{ .imports.releaseName }}
        namespace: {{ .imports.releaseNamespace }}
        chart:
          {{ $resource := getResource .cd "name" "helm-deployer-chart" }}
          ref: {{ $resource.access.imageReference }}

    {{ $values := dict "values" .imports.values }}

    {{ $imgresource := getResource .cd "name" "helm-deployer-image" }}
    {{ $imgrepo := ociRefRepo $imgresource.access.imageReference }}
    {{ $imgtag := ociRefVersion $imgresource.access.imageReference }}
    {{ $imgref := dict "repository" $imgrepo "tag" $imgtag }}

    {{ $newvals := dict "image" $imgref }}

    {{ $deployerConfig := dict }}
    {{ if .imports.landscaperCluster }}
    {{ $lsClusterKubeconfig := .imports.landscaperCluster.spec.config.kubeconfig }}
    {{ $newKubeconfig := dict "kubeconfig" $lsClusterKubeconfig }}
    {{ $_ := set $deployerConfig "landscaperClusterKubeconfig" $newKubeconfig }}
    {{ end }}

    {{ if .imports.identity  }}
    {{ $_ := set $deployerConfig "identity" .imports.identity }}
    {{ end }}

    {{ if .imports.targetSelectors }}
    {{ $_ := set $deployerConfig "targetSelector" .imports.targetSelectors }}
    {{ end }}

    {{ $_ := set $newvals "deployer" $deployerConfig }}
    {{ $mergevals := dict "values" $newvals }}

    {{ $val := mergeOverwrite $values $mergevals }}
    {{ toYaml $val | indent 4 }}