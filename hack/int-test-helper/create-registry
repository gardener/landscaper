#!/bin/bash

# SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -o errexit
set -o nounset
set -o pipefail

KUBECONFIG_PATH=$1
TMP=$2

REGISTRY_NS=registry

SOURCE_PATH="$(dirname $0)/../.."
cd "${SOURCE_PATH}"
SOURCE_PATH="$(pwd)"

echo "Run create registry in source path ${SOURCE_PATH}"

ID="12"

echo "Create registry namespace"

kubectl --kubeconfig=$KUBECONFIG_PATH apply -f - <<EOF
apiVersion: v1
kind: Namespace
metadata:
  name: $REGISTRY_NS
EOF

echo "Cleanup registry"
go run ./hack/testcluster registry delete \
    --kubeconfig=$KUBECONFIG_PATH \
    --namespace=$REGISTRY_NS \
    --id=$ID \
    --timeout=10m

echo "Create registry"
go run ./hack/testcluster registry create \
    --kubeconfig=$KUBECONFIG_PATH \
    --namespace=$REGISTRY_NS \
    --id=$ID \
    --registry-auth=$TMP/docker.config \
    --dns-format=external \
    --timeout=10m \
    --ls-run-on-shoot

address=$(cat "$TMP/docker.config" | jq -r '.auths | to_entries | .[0].value.serveraddress')
address=${address%:*} # remove port, if given
echo "Waiting until registry address '$address' is routable ..."
timeout=300
start=$(date +%s)
now=start
while true; do
  if nslookup "$address" >/dev/null; then
    # successfully routed
    break
  elif [[ $(($now - $start)) -gt $timeout ]]; then
    echo "Address '$address' did not become routable within $timeout seconds."
    exit 1
  fi
  sleep 5
  now=$(date +%s)
done

echo "Registry is running and reachable. Config is stored at '$TMP/docker.config'."